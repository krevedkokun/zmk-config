/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/* |  0 |  1 |  2 |  3 |  4 |    |   |    |  5 |  6 |  7 |  8 |  9 |
   | 10 | 11 | 12 | 13 | 14 |    |   |    | 15 | 16 | 17 | 18 | 19 |
   | 20 | 21 | 22 | 23 | 24 |    |   |    | 25 | 26 | 27 | 28 | 29 |
   |    |    |    |    | 30 | 31 |   | 32 | 33 |    |    |    |    | */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

&lt {
  quick-tap-ms = <200>;
  flavor = "tap-preferred";
};

/ {
  combos {
    compatible = "zmk,combos";

    combo_lbkt {
      timeout-ms = <50>;
      key-positions = <5 15>;
      bindings = <&kp LBKT>;
      layers = <0>;
    };

    combo_rbkt {
      timeout-ms = <50>;
      key-positions = <4 14>;
      bindings = <&kp RBKT>;
      layers = <0>;
    };

    combo_semi {
      timeout-ms = <50>;
      key-positions = <15 25>;
      bindings = <&kp P>;
      layers = <0>;
    };

    combo_grave {
      timeout-ms = <50>;
      key-positions = <14 24>;
      bindings = <&kp GRAVE>;
      layers = <0>;
    };

    combo_esc {
      timeout-ms = <50>;
      key-positions = <30 31>;
      bindings = <&kp ESC>;
      layers = <0>;
    };

    combo_del {
      timeout-ms = <50>;
      key-positions = <32 33>;
      bindings = <&kp DEL>;
      layers = <0>;
    };

    combo_caps_word {
      timeout-ms = <50>;
      key-positions = <13 16>;
      bindings = <&caps_word>;
    };
  };

  behaviors {
    lhm: left_home_row {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_HOME_ROW";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <
	30 31 32 33
	11 12 13 14
	5 6 7 8 9
	15 16 17 18 19
	25 26 27 28 29
	>;
    };
    rhm: right_home_row {
      compatible = "zmk,behavior-hold-tap";
      label = "RIGHT_HOME_ROW";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <
	30 31 32 33
	16 17 18 19
	0 1 2 3 4
	10 11 12 13 14
	20 21 22 23 24
	>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      bindings = <
	&kp Q       &kp W       &kp E        &kp R        &kp T &kp Y &kp U        &kp I        &kp O         &kp SQT
	&lhm LGUI A &lhm LALT S &lhm LCTRL D &lhm LSHFT F &kp G &kp H &rhm LSHFT J &rhm LCTRL K &rhm LALT L   &rhm LGUI SEMI
	&kp Z       &lhm RALT X &kp C        &kp V        &kp B &kp N &kp M        &kp COMMA    &rhm RALT DOT &kp SLASH
	&lt 4 SPC &lt 3 TAB &lt 2 ENTER &lt 1 BSPC
	>;
    };

    num_layer {
      bindings = <
	&kp EQUAL &kp N7 &kp N8 &kp N9 &none &none &none     &none     &none    &none
	&kp MINUS &kp N4 &kp N5 &kp N6 &none &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
	&kp BSLH  &kp N1 &kp N2 &kp N3 &none &none &none     &none     &none    &none
	&kp N0 &none &none &none
	>;
    };

    sym_layer {
      bindings = <
	&kp PLUS  &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR &none &none     &none     &none    &none
	&kp UNDER &kp DLLR &kp PRCNT &kp CARET &none    &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
	&kp PIPE  &kp EXCL &kp AT    &kp HASH  &none    &none &none     &none     &none    &none
	&none &none &none &none
	>;
    };

    misc_layer {
      bindings = <
	&none    &none    &none     &none     &none &to 5 &none    &none        &none &none
	&kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none &none &kp CAPS &kp LS(CAPS) &none &none
	&none    &none    &none     &none     &none &none &none    &none        &none &none
	&none &none &none &none
	>;
    };

    ctrl_layer {
      bindings = <
	&none &none &none &none &bootloader   &bootloader &none        &none        &none        &none
	&none &none &none &none &sys_reset    &sys_reset  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
	&none &none &none &none &none         &none       &out OUT_TOG &bt BT_CLR   &none        &none
	&none &none &none &none
	>;
    };

    gaming_layer {
      bindings = <
	&kp N1 &kp N2 &kp N3 &kp N4 &kp N5    &kp Y &kp U &kp I     &kp O   &kp SQT
	&kp A  &kp S  &kp D  &kp F  &kp G     &kp H &kp J &kp K     &kp L   &kp SEMI
	&kp Z  &kp X  &kp C  &kp V  &kp B     &kp N &kp M &kp COMMA &kp DOT &kp SLASH
	&kp LSHFT &kp SPC &to 0 &kp BSPC
	>;
    };


  };
};

/* Local Variables: */
/* mode: c */
/* End: */
