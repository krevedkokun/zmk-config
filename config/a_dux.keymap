/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

&lt {
  quick-tap-ms = <150>;
};

/ {
  combos {
    compatible = "zmk,combos";

    combo_lbkt {
      timeout-ms = <50>;
      key-positions = <0 10>;
      bindings = <&kp LBKT>;
      layers = <0>;
    };

    combo_rbkt {
      timeout-ms = <50>;
      key-positions = <9 19>;
      bindings = <&kp RBKT>;
      layers = <0>;
    };

    combo_semi {
      timeout-ms = <50>;
      key-positions = <19 29>;
      bindings = <&kp SEMI>;
      layers = <0>;
    };

    combo_grave {
      timeout-ms = <50>;
      key-positions = <9 20>;
      bindings = <&kp GRAVE>;
      layers = <0>;
    };

    combo_caps_word {
      timeout-ms = <50>;
      key-positions = <13 16>;
      bindings = <&caps_word>;
    };
  };

  behaviors {
    lhm: left_home_row {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_HOME_ROW";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <
	11 12 13 14
	5 6 7 8 9
	15 16 17 18 19
	25 26 27 28 29
	>;
    };
    rhm: right_home_row {
      compatible = "zmk,behavior-hold-tap";
      label = "RIGHT_HOME_ROW";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <
	16 17 18 19
	0 1 2 3 4
	10 11 12 13 14
	20 21 22 23 24
	>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      bindings = <
	&kp Q       &kp W       &kp E        &kp R        &kp T &kp Y &kp U        &kp I        &kp O       &kp P
	&lhm LGUI A &lhm LALT S &lhm LCTRL D &lhm LSHFT F &kp G &kp H &rhm LSHFT J &rhm LCTRL K &rhm LALT L &rhm LGUI SQT
	&kp Z       &kp X       &kp C        &kp V        &kp B &kp N &kp M        &kp COMMA    &kp DOT     &kp SLASH
	&kp SPC &kp TAB &lt 2 ENTER &lt 1 BSPC
	>;
    };

    num_layer {
      bindings = <
	&kp EQUAL &kp N7 &kp N8 &kp N9 &none &none &none     &none     &none    &none
	&kp MINUS &kp N4 &kp N5 &kp N6 &none &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
	&kp SEMI  &kp N1 &kp N2 &kp N3 &none &none &none     &none     &none    &none
	&kp N0 &none &none &none
	>;
    };

    sym_layer {
      bindings = <
	&none &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR &none &none     &none     &none    &none
	&none &kp DLLR &kp PRCNT &kp CARET &none    &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
	&none &kp EXCL &kp AT    &kp HASH  &none    &none &none     &none     &none    &none
	&none &none &none &none
	>;
    };

  };
};
